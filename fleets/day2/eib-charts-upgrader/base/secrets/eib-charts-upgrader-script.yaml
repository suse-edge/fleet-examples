apiVersion: v1
kind: Secret
metadata:
  name: eib-charts-upgrader-script
type: Opaque
stringData:
  chartPatch.sh: |
    #!/bin/bash
    set -eo pipefail

    chart_upgrade_data=/tmp/chart-upgrade-data
    eib_helm_chart_namespace=kube-system

    empty_dir=1
    for chart_data_file in "$chart_upgrade_data"/*.txt; do
      [ -e "$chart_data_file" ] || continue

      if [ "$empty_dir" -eq "1" ]; then
        empty_dir=0
      fi

      chart_data=$(cat "$chart_data_file")
      name=$(cut -d '|' -f 1 <<< "$chart_data")
      version=$(cut -d '|' -f 2 <<< "$chart_data")
      archive=$(cut -d '|' -f 3- <<< "$chart_data")

      echo "Validation whether $name exists.."
      get_chart=$(kubectl get helmchart "$name" --ignore-not-found -n "$eib_helm_chart_namespace")
      if [ -z "$get_chart" ]; then
        echo "HelmChart resource '$name' not found. Skipping upgrade.."
        continue
      fi

      echo "Patching $name.."
      kubectl patch helmchart "$name" --type=merge -p "{\"spec\":{\"chartContent\":\"$archive\", \"version\":\"$version\"}}" -n "$eib_helm_chart_namespace"
    done

    if [ "$empty_dir" -eq "1" ]; then
      echo "$chart_upgrade_data has no provided upgrade data."
      echo "Make sure you generate your chart data first before running this workload."
      exit 1
    fi
